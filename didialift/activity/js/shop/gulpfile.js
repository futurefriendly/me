/** * 引入gulp对象 * @type {Gulp|exports} */ var gulp = require('gulp'); var replace = require('gulp-replace'); var compressor = require('gulp-compressor'); var hash_src = require("gulp-hash-src"); var exec = require('child_process').exec; //单个文件 var path = { src: './*.js', dest: '../' }; /** * * 只支持href=,src=,url()三种形式的替换，如果需要匹配自定义的asyncLoadJs需要自己去修改源码更改中的正则表达式 * 不需要修改任何html结构，直接搞即可 * @type {[type]} */ gulp.task("hash-src", function() { gulp.src(path.src) .pipe(hash_src({ build_dir: "/", //js/css/images所在的文件根目录 src_path: "./", //要替换引用的html文件目录 hash: 'md5', enc: 'hex', //hex，base64 exts: ['.js', '.css'], query_name: "v" })) .pipe(gulp.dest(path.dest)); }); /** * gulp-replace */ gulp.task('replace', function() { gulp.src(path.src) .pipe(replace('http://static.diditaxi.com.cn/activity/', 'http://static.diditaxi.com.cn/activity/')) .pipe(gulp.dest(path.dest)); }); /** * html-compressor */ gulp.task('min', function() { gulp.src('.' + path.src) .pipe(compressor({ 'remove-intertag-spaces': true, 'simple-bool-attr': true, 'compress-js': true, 'compress-css': true })) .pipe(gulp.dest(path.dest)); }); /** * 发布html文件准备 * @return {[type]} [description] */ gulp.task('default', function() { // exec('gulp hash', function() { console.log('finished hash-src task.'); exec('gulp replace', function() { console.log('finished replace task'); exec('gulp min', function() { console.log('finished compressor task'); }); }); //}) });